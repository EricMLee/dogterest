{"version":3,"sources":["SharedContext.js","ButtonRow.js","ImageScreen.js","AddMedia.js","App.js","reportWebVitals.js","index.js"],"names":["SharedContext","React","createContext","ButtonRow","forceUpdate","useState","setValue","value","useForceUpdate","useContext","catergories","toggleButton","setCatergories","toggledButton","className","Object","keys","map","item","onClick","ImageScreen","images","setImages","display","setDisplay","filter","image","class","href","src","console","log","AddMedia","show","setShow","handleClose","urlValue","setUrl","catergoryValue","setCatergory","myStorage","window","localStorage","useEffect","Modal","onHide","Header","closeButton","Title","Body","InputGroup","FormControl","placeholder","aria-label","onChange","e","target","Footer","Button","variant","cVal","newItem","myList","getItem","JSON","parse","unshift","setItem","stringify","includes","pop","push","App","ImageList","forEach","element","catergoryName","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a3b6084.chunk.js","sourcesContent":["import React from 'react';\r\nconst SharedContext = React.createContext();\r\nexport default SharedContext;\r\n","import React, {useState} from 'react';\r\nimport './ButtonRow.css';\r\nimport SharedContext from './SharedContext';\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nfunction ButtonRow(){\r\n  const forceUpdate = useForceUpdate();\r\n  const { catergories, setCatergories, toggledButton, toggleButton } = React.useContext(SharedContext);\r\n  return(\r\n    <div className = \"bar col-md-11 \">\r\n      {Object.keys(catergories).map((item) => (\r\n        <div className = \"barItem\" onClick={()=>{\r\n          toggleButton(item);\r\n          forceUpdate();  \r\n        }}>\r\n          {catergories[item]}\r\n        </div>\r\n      ))}\r\n      \r\n    </div>\r\n  );\r\n}\r\nexport default ButtonRow;","\r\nimport React, {useState, useEffect} from 'react';\r\nimport './ImageScreen.css';\r\nimport SharedContext from './SharedContext';\r\nimport { Button } from 'react-bootstrap';\r\nimport {SRLWrapper} from 'simple-react-lightbox';\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update the state to force render\r\n}\r\nfunction ImageScreen(){\r\n  const {images, setImages, catergories, toggledButton, display, setDisplay} = React.useContext(SharedContext);\r\n\r\n  const forceUpdate = useForceUpdate();\r\n  return(\r\n    <SRLWrapper>\r\n    <div className = \"col-sm-10 container-fluid\">\r\n      <div className = \"row\">\r\n        {/* {Object.keys(images).map((item) => ( */}\r\n          {images.filter(image => image[\"catergory\"] === catergories[toggledButton] || catergories[toggledButton] === 'All').map((image, item) => (\r\n          <div class=\"test col-md-6 col-lg-4 col-xl-3\"> \r\n            <a href={image['url']} className=\"thumbnail\">\r\n              <div class=\"image m-1\">\r\n                <img src={image['url']} class=\"img img-responsive full-width\" onClick = {() => {\r\n                  console.log(images);\r\n                }}/>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </SRLWrapper>\r\n  );\r\n}\r\nexport default ImageScreen;","import React, {useState, useEffect} from 'react';\r\nimport SharedContext from './SharedContext';\r\nimport './addMedia.css';\r\n\r\nimport {Modal, Button, InputGroup, FormControl} from 'react-bootstrap'\r\n\r\nfunction useForceUpdate(){\r\n  const [value, setValue] = useState(0); // integer state\r\n  return () => setValue(value => value + 1); // update the state to force render\r\n}\r\n\r\nfunction AddMedia(){\r\n  const forceUpdate = useForceUpdate();\r\n  const { catergories, setCatergories, images, setImages } = React.useContext(SharedContext);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [urlValue, setUrl] = useState('');\r\n  const [catergoryValue, setCatergory] = useState('');\r\n  var myStorage = window.localStorage;\r\n\r\n  \r\n  useEffect(()=>{\r\n    console.log(\"A\");\r\n  }, [images]);\r\n\r\n  return(\r\n    <div className = \"bar col-md-11\">\r\n        <div className = \"addMore ml-auto\" onClick= {()=>{\r\n          handleShow();\r\n        }}>\r\n          Add +\r\n        </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add an Image</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Image url:\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              placeholder=\"Image url\"\r\n              aria-label=\"url to imgur is ideal\"\r\n              value = {urlValue}\r\n              onChange = {e => setUrl(e.target.value)}\r\n            />\r\n          </InputGroup>\r\n          Catergory:\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl\r\n              placeholder=\"Catergory\"\r\n              aria-label=\"Default is misc.\"\r\n              value = {catergoryValue}\r\n              onChange = {e => setCatergory(e.target.value)}\r\n            />\r\n          </InputGroup>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n            handleClose();\r\n          }}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n            var cVal = catergoryValue;\r\n            if(catergoryValue === \"\"){\r\n              cVal = \"misc\";\r\n            }\r\n            var newItem = {'uid': urlValue, 'url': urlValue, 'catergory': cVal};\r\n            var myList = myStorage.getItem(\"images\");\r\n            myList = JSON.parse(myList);\r\n            myList.unshift(newItem);\r\n            setImages(myList);\r\n            myStorage.setItem(\"images\", JSON.stringify(myList));\r\n            \r\n            var myList = myStorage.getItem(\"catergories\");\r\n            myList = JSON.parse(myList);\r\n            if (!myList.includes(cVal)){\r\n              myList.pop();\r\n              myList.push(cVal);\r\n              myList.push(\"misc\");\r\n              console.log(myList);\r\n              myStorage.setItem(\"catergories\", JSON.stringify(myList));\r\n              setCatergories(myList);\r\n            }\r\n            setCatergory('');\r\n            setUrl('');\r\n            forceUpdate();\r\n            handleClose();\r\n          }}>\r\n            Add Image\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default AddMedia;","import React, { useEffect, useState} from \"react\";\nimport './App.css';\nimport SharedContext from './SharedContext';\nimport ImageList from './data/images';\nimport ButtonRow from './ButtonRow';\nimport ImageScreen from './ImageScreen';\nimport AddMedia from './AddMedia';\n\n\nfunction App() {\n  var myList = [];\n  var [images, setImages] = React.useState(ImageList);\n  var myStorage = window.localStorage;\n  var [catergories, setCatergories] = React.useState(myList);\n  var [toggledButton, toggleButton] = React.useState(0);\n  var [display, setDisplay] = React.useState([]);\n  useEffect(()=>{\n    // myStorage.removeItem(\"images\");\n    // myStorage.removeItem(\"catergories\");\n    var myList = myStorage.getItem(\"catergories\");\n    if (myList !== null){\n      setCatergories(JSON.parse(myList));\n      console.log(JSON.parse(myList));\n    } else {\n      myList = ['All'];\n      images.forEach(element => {\n        var catergoryName = element['catergory'];\n        if (!myList.includes(catergoryName) && catergoryName !== 'misc') {\n          myList.push(catergoryName);\n        }\n      });\n      myList.push('misc');\n      console.log(myList);\n      myStorage.setItem(\"catergories\", JSON.stringify(myList));\n      setCatergories(myList);\n    }\n\n    myList = myStorage.getItem(\"images\");\n    if (myList !== null){\n      setImages(JSON.parse(myList));\n    } else {\n      myStorage.setItem(\"images\", JSON.stringify(ImageList));\n      setImages(ImageList);\n    }\n    console.log(images);\n\n  }, []);\n\n  return (\n    <div className = \"screen\">\n      <SharedContext.Provider value= {{\n        images, setImages, catergories, setCatergories, toggledButton, toggleButton, display, setDisplay\n      }}>\n\n      <div className = \"test1 row\">\n        <a href=\"https://ericmlee.github.io/\" className=\"backBtn\">\n          <div className = \"title ml-3\">\n            Eric Lee\n          </div>\n        </a>\n      </div>\n        <div className = \"test1 row\">\n          <div className = \"col-sm-12 col-md-8\">\n            <ButtonRow></ButtonRow>\n          </div>\n          <div className = \"col-sm-12 col-md-3\">\n            <AddMedia></AddMedia>\n          </div>\n        </div>\n        <div className = \"imageScreen col-md-12\">\n          <ImageScreen></ImageScreen>\n        </div>\n        \n      </SharedContext.Provider>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SimpleReactLightbox from 'simple-react-lightbox';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleReactLightbox>\n      <App />\n    </SimpleReactLightbox>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}